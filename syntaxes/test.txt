/* ---------- COLOR SPECTRUM TEST ---------- */

// `_` is used for a wildcard strings when possible.
// (Just so it's extremely unobtrusive)
// Some additional words are inserted when syntax color patterns require it; these are not necessarily noted.


/* ---------- COMMENTS ---------- */

// punctuation.definition.comment.mgs for `/*` and `*/`
// comment.block.mgs for the interior

// punctuation.definition.comment.mgs for `//` (and `\n|$` I guess lol)
// comment.line.double-slash.mgs for the interior

// Default VSCode Dark+/Light+ color: green/green

// Should be this color: this whole section :P


/* ---------- ACTION KEYWORDS ---------- */

// storage.type.mgs
// Default VSCode Dark+/Light+ color: dark blue/deep blue

// ≈ "let _" in JS
// ≈ verbs
// Keywords that aren't control words

// Should be this color:

            // 1st word
            fn                _ () {}
            script            _ {}
            dialog            _ {}
            serial_dialog     _ {}
            add               dialog settings {
            default           {} }
            add               serial_dialog settings {} _ {
            // all
            save close
            wait block
            load erase
            pause unpause
            delete shake
            hide unhide
            show fade
            // 1st word
            save         slot;
            close        dialog;
            close        serial_dialog;
            wait         1;
            block        1;
            load         slot 0;
            erase        slot 0;
            pause        player on_look;
            pause        self on_look;
            pause        entity _ on_look;
            pause        entity "_" on_look;
            unpause      player on_look;
            unpause      self on_look;
            unpause      entity _ on_look;
            unpause      entity "_" on_look;
            pause        player on_interact;
            pause        self on_interact;
            pause        entity _ on_interact;
            pause        entity "_" on_interact;
            unpause      player on_interact;
            unpause      self on_interact;
            unpause      entity _ on_interact;
            unpause      entity "_" on_interact;
            pause        player on_tick;
            pause        self on_tick;
            pause        entity _ on_tick;
            pause        entity "_" on_tick;
            unpause      player on_tick;
            unpause      self on_tick;
            unpause      entity _ on_tick;
            unpause      entity "_" on_tick;
            pause        map on_tick;
            unpause      map on_tick;
            delete       command _;
            delete       command _ + _;
            delete       alias _;
            hide         command _;
            unhide       command _;
            show         dialog _;
            show         dialog {};
            show         dialog _ {};
            show         serial_dialog _;
            show         serial_dialog {};
            show         serial_dialog _ {};
			// 2nd word
camera      shake       ->
camera      fade        in ->
camera      fade        out -> }


/* ---------- IDENTIFIERS ---------- */

// variable.parameter.mgs
// Default VSCode Dark+/Light+ color: pale blue/dark blue

// Words that `entity` and `geometry` that categorize the following string
// (it is the pair that is the identifier in that case; a sigil)

// NOTE: traditional variable identifiers are string-colored

// Should be this color:

                // these
add             serial_dialog        settings {}
add             dialog               settings {
                label                _ {}
                entity               _ {
                entity               _
                name                 _
                emote                0
                portrait             _
                alignment            BR
                border_tileset       _
                wrap                 0 }}
serial_dialog   serialDialogName     {}
serial_dialog   "serialDialogName"   {}
dialog          dialogName           {}
dialog          "dialogName"         { _
                entity               _
                name                 _
                emote                0
                portrait             _
                alignment            BR
                border_tileset       _
                wrap                 0 "_" } _ {
                // all
                warp_state debug_mode index slot
                hex_editor hex_dialog_mode
                hex_control hex_clipboard
                serial_control player_control
                lights_control
                identifier "identifier"
                // these
debug!(         serialDialogName )


// the below will modify the following word to be string-colored
// (and so can't be put in a big list)

                // these
                flag                 _
                variable             _
                map                  _
                label                _
                script               _
                dialog               {}
                dialog               _ {}
                serial_dialog        _
                serial_dialog        {}
                serial_dialog        _ {}
                alias                _ = _
                command              _ = _
                command              _ fail = _
                command              _ + _ = _
goto            script               _;
show            dialog               _;
show            dialog               _;
show            dialog               {};
show            serial_dialog        _;
show            serial_dialog        _;
show            serial_dialog        {};
concat          serial_dialog        {};
concat          serial_dialog        _ {};
concat          serial_dialog        _ {};
hide            command              _;
unhide          command              _;
delete          command              _;
delete          command              _ + _;
delete          alias                _; }


/* ---------- PROPERTIES ---------- */

// variable.object.property.mgs
// Default VSCode Dark+/Light+ color: pale blue/dark blue

// Also entity fields and similar universal properties for that category
// Includes game engine properties like `debug_mode`

// Should be this color:

_ {

// all
position origin length direction
animation glitched direction x y
primary_id secondary_id primary_id_type
current_animation animation_frame
strafe direction direction
name type path on_look on_interact
on_tick on_command on_load

		               // these
self                   direction
self                   position
self                   animation
self                   glitched
player                 direction
player                 position
player                 animation
player                 glitched
self                   x
self                   y
self                   primary_id
self                   secondary_id
self                   primary_id_type
self                   current_animation
self                   animation_frame
self                   strafe
self                   direction
self                   direction
player                 x
player                 y
player                 primary_id
player                 secondary_id
player                 primary_id_type
player                 current_animation
player                 animation_frame
player                 strafe
player                 direction
player                 direction
self                   name
self                   type
self                   path
player                 name
player                 type
player                 path
self                   on_look
self                   on_tick
self                   on_interact
player                 on_look
player                 on_tick
player                 on_interact
map                    on_look
map                    on_tick
map                    on_load
map                    on_command
geometry _             origin
geometry _             length
entity _               direction
entity _               position
entity _               animation
entity _               glitched
entity _               x
entity _               y
entity _               primary_id
entity _               secondary_id
entity _               primary_id_type
entity _               current_animation
entity _               animation_frame
entity _               strafe
entity _               direction
entity _               direction
entity "_"             x
entity "_"             y
entity "_"             primary_id
entity "_"             secondary_id
entity "_"             primary_id_type
entity "_"             current_animation
entity "_"             animation_frame
entity "_"             strafe
entity "_"             direction
entity "_"             direction
entity _               name
entity _               type
entity _               path
entity "_"             name
entity "_"             type
entity "_"             path
entity _               on_look
entity _               on_tick
entity _               on_interact
entity "_"             on_look
entity "_"             on_tick
entity "_"             on_interact           }
add serial_dialog      settings              {}
add dialog             settings              {} 


/* ---------- SCRIPT NAMES & MACROS ---------- */

// entity.name.function.mgs
// Default VSCode Dark+/Light+ color: yellow/brown

// ≈ Function definitions and calls, macros
// Should be this color:
						// these
						include           "_";
						fn_definition     ($_) {}
						fn_definition     ($_,) {}
						fn_definition     ($_, $_) {}
						fn_definition     ($_, $_,) {}
						fn_definition     ($_, $_, $_) {}
						fn_definition     ($_, $_, $_,) {}
						fn_definition     ($_, $_, $_, $_) {}
						fn_definition     ($_, $_, $_, $_,) {}
						scriptName        {
						debug!            ()
						debug!            (_)
						debug!            ("_")
						rand!             ()
						RNG!              ()
						json              []
						copy_script       ()
						"copy_script"     ()
						fn_call           ($asdf, 4, _, "_", "%SELF%")
						"fn_call"         ($asdf) }
						scriptName        {}
						"scriptName"      {}
						scriptName        ($_) {}
						"scriptName"      ($_) {}
						scriptName        {
						scriptName        ()
						"scriptName"      ()
goto                    scriptName
goto                    "scriptName"
goto script             scriptName
goto script             "scriptName"
on_tick =               "scriptName"
on_look =               "scriptName"
on_load =               "scriptName"
on_command =            "scriptName"
on_interact =           "scriptName"
on_tick =               scriptName
on_look =               scriptName
on_load =               scriptName
on_command =            scriptName
on_interact =           scriptName
on_tick ==              scriptName
on_look ==              scriptName
on_load ==              scriptName
on_command ==           scriptName
on_interact ==          scriptName
on_tick !=              scriptName
on_look !=              scriptName
on_load !=              scriptName
on_command !=           scriptName
on_interact !=          scriptName
if _ then goto          scriptName
if _ then goto script   scriptName
command $__ =           scriptName
command ___ =           scriptName
command "_" =           scriptName
command $__ =           "scriptName"
command ___ =           "scriptName"
command "_" =           "scriptName"
command $__ fail =      scriptName
command ___ fail =      scriptName
command "_" fail =      scriptName
command $__ fail =      "scriptName"
command ___ fail =      "scriptName"
command "_" fail =      "scriptName"
command $__ + ___ =     scriptName
command ___ + ___ =     scriptName
command "_" + ___ =     scriptName
command $__ + ___ =     "scriptName"
command ___ + ___ =     "scriptName"
command "_" + ___ =     "scriptName"
command $__ + "_" =     scriptName
command ___ + "_" =     scriptName
command "_" + "_" =     scriptName
command $__ + "_" =     "scriptName"
command ___ + "_" =     "scriptName"
command "_" + "_" =     "scriptName"
command $__ + $_ =      scriptName
command ___ + $_ =      scriptName
command "_" + $_ =      scriptName
command $__ + $_ =      "scriptName"
command ___ + $_ =      "scriptName"
command "_" + $_ =      "scriptName"     }
script                  "scriptName"     {}
script                  scriptName       {}

/* ---------- CONTROL WORDS ---------- */

// keyword.control.mgs
// Default VSCode Dark+/Light+ color: purple/magenta

// Looping
// Logical branching (results in roads not taken)
// Script jumps (things underneath are unreachable)
// Marking choices in dialog (script jumps AND making roads not taken)

// Should be this color:

                        	// these
dialog _ { _ "_"            >                "_" = _ }
serial_dialog _ { _ "_"     _                "_" = _ }
serial_dialog _ { _ "_"     #                "_" = _ } _ {
							load             map _
							goto             label _
							goto             index $_
							goto             index 0
							goto             script _
							goto             index 0
							goto             _
							if               ( _ ) { _ }
							else if          ( _ ) { _ }
							else             { _ }
							while            ( _ ) {
							break
							continue
							return           }
							do               {
							break
							continue
							return          }
							while           () 
							for             ( ; _ ; ) {
							break
							continue
							return           }
if _                        then             } // only if an `if` is before it somewhere on the same line


/* ---------- CONSTANTS ---------- */

// variable.other.constant.mgs
// Default VSCode Dark+/Light+ color: bright blue

// = "compile-time" constants
// These should be able to take the place of normal "literal" values
// like strings, numbers, bools

// Should be this color:

				   // these
				   $varName            = _;
				   $varName            = "_";
				   $varName            = 0;
				   $varName            = 0ms;
				   $varName            = 0px;
				   $varName            = true;
				   $varName            = north; _ {
entity             $varName
geometry           $varName
map                $varName
label              $varName
command            $varName
alias              $varName
light              $varName
dialog             $varName
serial_dialog      $varName
_ (                $varName            ) }
_ (                $varName            ) {}


/* ---------- LANGUAGE CONSTANTS ---------- */

// constant.language.mgs
// Default VSCode Dark+/Light+ color: dark blue/deep blue

// = Language-defined terms like `null` or `true`
// Also engine-specific nouns: buttons, lights, cardinal directions

// What's different about these in particular is that they
// can be swapped out with $constants, whereas "special targets"
// (`player`, `self`) or modifiers (`pressed`, `forever`) cannot

// Should be this color:

_ {
// all
true false north south east west
LED_MEM0 LED_MEM1 LED_MEM2 LED_MEM3
LED_BIT1 LED_BIT2 LED_BIT4 LED_BIT8
LED_BIT16 LED_BIT32 LED_BIT64 LED_BIT128
LED_XOR LED_ADD LED_SUB LED_PAGE ALL
MEM0 MEM1 MEM2 MEM3 XOR ADD SUB PAGE
BIT1 BIT2 BIT4 BIT8 BIT16 BIT32 BIT64 BIT128
LJOY_CENTER LJOY_UP LJOY_DOWN LJOY_LEFT LJOY_RIGHT
RJOY_CENTER RJOY_UP RJOY_DOWN RJOY_LEFT RJOY_RIGHT
TRIANGLE X CROSS CIRCLE O SQUARE HAX ANY ALL    } add dialog settings { default {
		        // these
alignment       BOTTOM_LEFT
alignment       TOP_LEFT
alignment       BOTTOM_RIGHT
alignment       TOP_RIGHT
alignment       BL
alignment       TL
alignment       BR
alignment       TR                              }} dialog _ { _
alignment       BOTTOM_LEFT
alignment       TOP_LEFT
alignment       BOTTOM_RIGHT
alignment       TOP_RIGHT
alignment       BL
alignment       TL
alignment       BR
alignment       TR                              "_"}


/* ---------- STYLE TAG NAMES ---------- */

// entity.name.tag.mgs
// Default VSCode Dark+/Light+ color: dark blue/slightly darker red

// = XML tag names

// Should be this color:

serial_dialog _ {
    // insides          // insides
"   <red>          _    <r>
    <blue>         _    <b>
    <cyan>         _    <c>
    <black>        _    <k>
    <green>        _    <g>
    <white>        _    <w>
    <yellow>       _    <y>
    <magenta>      _    <m>
    <bold>         _    <dim>
    <bg-red>       _    <bg-r>
    <bg-blue>      _    <bg-b>
    <bg-cyan>      _    <bg-c>
    <bg-black>     _    <bg-k>
    <bg-white>     _    <bg-w>
    <bg-green>     _    <bg-g>
    <bg-yellow>    _    <bg-y>
    <bg-magenta>   _    <bg-m>        "}


/* ---------- STYLE TAG BRACKETS ---------- */

// punctuation.definition.tag.mgs
// (adding .begin or .end as appropriate)
// Default VSCode Dark+/Light+ color: gray/slightly darker red

// = XML tag brackets

// Should be this color:

serial_dialog _ {
	     // brackets         // brackets
"       <red>          _    <r>           
	    <blue>         _    <b>           
	    <cyan>         _    <c>           
	    <black>        _    <k>           
	    <green>        _    <g>           
	    <white>        _    <w>           
	    <yellow>       _    <y>           
	    <magenta>      _    <m>           
	    <bold>         _    <dim>         
	    <bg-red>       _    <bg-r>        
	    <bg-blue>      _    <bg-b>        
	    <bg-cyan>      _    <bg-c>        
	    <bg-black>     _    <bg-k>        
	    <bg-white>     _    <bg-w>        
	    <bg-green>     _    <bg-g>        
	    <bg-yellow>    _    <bg-y>        
	    <bg-magenta>   _    <bg-m>        "
		// whole tag
"       <reset>
        </>
        <bell>                            " }

// (if whole tag insides are different, it's okay)


/* ---------- SPECIAL TARGETS & MODIFIERS ---------- */

// variable.language.mgs
// Default VSCode Dark+/Light+ color: dark blue/deep blue

// Single-word abbreviations of engine targets (`player` and `camera`)
// (So not `map`, because that's a sigil most of the time)
// Also similar variable-replacement keywords inside dialogs

// States specific to an action (vs a generic entity property),
// ≈ prepositions
// like looping `forever` and a button being `pressed` or `up` or `down`

// Should be this color:

_ {
                   // all
                   player self camera
                   down up pressed open
                   closed forever over fail
                   // these
                   camera          =
                   camera          ->
                   player          position =
                   player          position ->
                   self            direction =
pause              self             on_tick;
pause              player           on_tick;
button MEM0        down
button MEM0        pressed
button MEM0        up
camera fade        in              ->
camera fade        out             ->
command _          fail            = _; } add dialog settings { label PLAYER {
	               // insides (not quotes)
entity             "%PLAYER%"
entity             "%SELF%"
name               "%ANYTHING%"        }} dialog _ {
entity             "%PLAYER%"          "_"  // (different quote color)
entity             "%SELF%"            "_"  // (different quote color)
name               "%ANYTHING%"        "_"  // (different quote color)
_ entity           "%PLAYER%"          "_"
_ entity           "%SELF%"            "_"
_ name             "%ANYTHING%"        "_"
_                  "%ANYTHING%"
_                  "$NUMBER$"          } serial_dialog _ {
                   "%ANYTHING%"
                   "$NUMBER$"          } _ {
entity             "%PLAYER%"
entity             "%SELF%"
geometry           "%ENTITY_PATH%"     }


/* ---------- NUMBER(-ish) ---------- */

// constant.numeric.integer.mgs
// Default VSCode Dark+/Light+ color: lime green/teal-green

// Numbers, including suffixes and prefixes
// Other number words, like `once`
// Colors and supported color keywords

// Should be this color:

// all
9000 9000s 9000ms 9000px 9000pix
9000x once twice thrice
#000 #010101 #abcDEF white black
red green blue magenta cyan yellow


/* ---------- SPECIAL ---------- */

// support.type.mgs
// Default VSCode Dark+/Light+ color: teal/teal-blue

// ≈ Classes or types (mostly aiming for a different color :P)

// Should be this color:

add dialog settings {
            // these
label       PLAYER                       {}
entity      Cleo                         {}
entity      "Guardian Bob"               {}
entity      "%ABSOLUTENAME%"             {}
            // quotes only
entity      "%PLAYER%"                   {}
entity      "%SELF%"                     {} } dialog _ {
	        // these
            PLAYER                       "_"
            entity entityName            "_"
            entity "Entity Name"         "_"
            name nameName                "_"
            name "Name Name"             "_" }


/* ---------- STRINGS ---------- */

// string.variable.mgs
// Default VSCode Dark+/Light+ color: orange/dark red

// = Strings, either wrapped in `"` or as barewords (in syntactically appropraite moments)
// Single quotes (') are no longer supported

// Should be this color:

                     // these
include              "string"              ; dialog _ {
entity _             "string"
entity "_"           "string"
entity "%PLAYER%"    "string"
					 "string"
>                    "string"              = _ } serial_dialog _ {
					 "string"      
_                    "string"              = _
#                    "string"              = _ } _ {
map                  string
map                  "string"
command              string                = _
command              "string"              = _
command              string                fail = _
command              "string"              fail = _
alias                string                = _
alias                "string"              = "_"
delete command       string
delete command       "string"
delete alias         string
delete alias         "string"
hide command         string
hide command         "string"
unhide command       string
unhide command       "string"
show dialog          string
show dialog          "string"
show dialog          string                {}
show dialog          "string"              {}
show serial_dialog   string
show serial_dialog   "string"
show serial_dialog   string                {}
show serial_dialog   "string"              {}
concat serial_dialog string
concat serial_dialog "string"
concat serial_dialog string                {}
concat serial_dialog "string"              {}
player type =        string
player type ==       string
player type !=       string
player name =        string
player name ==       string
player name !=       string
warp_state =         string
warp_state ==        string
warp_state !=        string
player type =        "string"
player type ==       "string"
player type !=       "string"
player name =        "string"
player name ==       "string"
player name !=       "string"
warp_state =         "string"
warp_state ==        "string"
warp_state !=        "string"
        player type =string
       player type ==string
       player type !=string
        player name =string
       player name ==string
       player name !=string
         warp_state =string
        warp_state ==string
        warp_state !=string
        player type ="string"
       player type =="string"
       player type !="string"
        player name ="string"
       player name =="string"
       player name !="string"
         warp_state ="string"
        warp_state =="string"
        warp_state !="string"
geometry             string
geometry             "string"
entity               string
entity               "string"
variable             string
variable             "string"
flag                 string
flag                 "string"       // and these
command              string       + string          = _
command              "string"     + "string"        = _
delete command       string       + string
delete command       "string"     + "string"        }

	
/* ---------- OPERATORS (LOGICAL) ---------- */

// keyword.operator.assignment.mgs
// Default VSCode Dark+/Light+ color: not a color (white/black)

// Should be this color:

_ {

// all
< <= == != >= > ! || && intersects

                 // this
command _        +          _ = _

}


/* ---------- OPERATORS (ASSIGNMENT) ---------- */

// keyword.operator.assignment.mgs
// Default VSCode Dark+/Light+ color: not a color (white/black)

// Should be this color:

_ {

// all
-> = += -= *= /= ?= %=

			                    // these
warp_state                      =            _ }
dialog _ { _ "_" > "_"          =            _ }
serial_dialog _ { "_" _ "_"     =            _
	                  # "_"     =            _ }

  
/* ---------- DIALOG MESSAGES (STRINGS XTREME) ---------- */

// + string.quoted.double.mgs for the quotes themselves
// Default VSCode Dark+/Light+ color: goldenrod/bright red
// Includes escaped characters: constant.character.escape.mgs

// Should be this color:

                       // \.
dialog _ { _ "_________\n__\"__\$__\%__\\___" }
serial_dialog _ { "____\n__\"__\\___________" }


/* ---------- LABEL ---------- */

// entity.name.label.mgs
// Default VSCode Dark+/Light+ color: not a color (white/black)

// Should be this color:

                    // these
_ { goto label      asdfasdf;
	                bigloop:

continue: } // but not keywords I guess


/* ---------- JSON COLORS ---------- */

// source.json
// Default VSCode Dark+/Light+ color: various

// You get these for free

_ {
	json[
		{
			"asdfasdf": null,
			"property": "value",
			"property0": true,
			"property1": null,
			"property2": -10,
			"property3": 1000000,
			"property4": [5,3,"string",40],
			"object": {"prop": null}
		}
	]
}


/* ---------- SPECTRUM TEST 0 ---------- */
// As few tokens as possible for each category of thing

script funcName {     // keyword + function name
	label:            // label
	hex_control       // identifier
	=                 // assignment operator
	true;             // language constant
	goto              // control word
	1000;             // number
	debug!(           // macro
		"<black>"     // string quotes + angle bracket + tag
		"<reset>"     // ...with reset tag
	)
	entity $var       // sigil + compile-time constant
	position          // property
	camera            // special target
	fade              // keyword
	in                // special modifier
	->                // assignment operator
	<                 // logical operator
}
dialog _ {
	entity "STRING"   // dialog identifier
	"\$\t\n\\"        // string quotes + escaped char
	entity "%PLAYER%" // ...with special target
	"%PLAYER%"        // ...with special target
	"Normal string"   // string
}


/* ---------- SPECTRUM TEST 1 ---------- */

// comment
/* also comment */
scriptName {
	label:
	if (entity Bob x == 80) {
		show dialog {
			Identifier
			emote 9000
			alignment TOP_RIGHT
			"What do ya know, %PLAYER%!"
			"\tSquare roots!"
		}
		flagName = debug_mode && player glitched;
		show serial_dialog {
			"<red>styled</>"
		}
		player_control = off;
	}
	goto scriptName;
	load slot 9001;
}


/* ---------- SPECTRUM TEST 2 ---------- */

// Lines up with that javascript file

scriptName {        // function name
	save            // keyword
	player_control  // identifier
	=               /* assignment operator */
	flag "string"   // string
	9000            // number
	;               // terminator

	entity _        // identifier (sigil)
		position    /* property */  = geometry stick;

	label:          // label
	while (         // control word
	geometry _      // sigil/identifier
	==              // logical operator
	true            /* language constant */ ) {}
	=               // assignment operator
	$SCREAMING      /* compile-time constant */; show dialog _ {

	Error       // dialog identifier
	emote      // identifier
	0          // number
	"string"   // string
	"\n"       /* escaped char */ } show serial_dialog {

	"message"        // normal message
	"<red>...<reset>"// xml style styles
	"$v$ ... %e%"    // language constants I think
	"\n\t\\escape!"  // escaped chars

}
}
