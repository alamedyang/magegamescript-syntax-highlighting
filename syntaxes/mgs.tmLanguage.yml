$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: MageGameScript
patterns:
  - include: "#comment_node"
  - include: "#include_macro"
  - include: "#fn_definition"
  - begin: \b(add)(\s+serial_dialog)(\s+settings)(\s*{)?
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: variable.parameter.mgs
      "3":
        name: variable.object.property.mgs
      "4":
        name: punctuation.section.block.begin.mgs
    end: "}"
    endCaptures:
      "0":
        name: punctuation.section.block.end.mgs
    patterns:
      - include: "#comment_node"
      - include: "#serial_parameters"
  - begin: \b(add)(\s+dialog)(\s+settings)(\s*{)?
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: variable.parameter.mgs
      "3":
        name: variable.object.property.mgs
      "4":
        name: punctuation.section.block.begin.mgs
    end: "}"
    endCaptures:
      "0":
        name: punctuation.section.block.end.mgs
    patterns:
      - include: "#comment_node"
      - begin: \b(label)\s+([_a-zA-Z][_a-zA-Z0-9]*)\s*({)
        beginCaptures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: support.type.mgs
          "3":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#dialog_parameter"
      - begin: \b(entity)\s+([_a-zA-Z][_a-zA-Z0-9]*|"(%(PLAYER|SELF)%)")\s*({)
        beginCaptures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: support.type.mgs
          "3":
            name: variable.language.mgs
          "5":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#dialog_parameter"
      - begin: \b(entity)\s+([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*")\s*({)
        beginCaptures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: support.type.mgs
          "3":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#dialog_parameter"
      - begin: \b(default)\s*({)
        beginCaptures:
          "1":
            name: storage.type.mgs
          "2":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#dialog_parameter"
  - begin: \b(dialog)\s+([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*")\s*({)
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: variable.parameter.mgs
      "3":
        name: punctuation.section.block.begin.mgs
    end: "}"
    endCaptures:
      "0":
        name: punctuation.section.block.end.mgs
    patterns:
      - include: "#dialog_body"
  - begin: \b(serial_dialog)\s+([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*")\s*({)
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: variable.parameter.mgs
      "3":
        name: punctuation.section.block.begin.mgs
    end: "}"
    endCaptures:
      "0":
        name: punctuation.section.block.end.mgs
    patterns:
      - include: "#serial_body"
  - begin: (script\s+)?([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*")\s*({)
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: entity.name.function.mgs
      "3":
        name: punctuation.section.block.begin.mgs
    end: "}"
    endCaptures:
      "0":
        name: punctuation.section.block.end.mgs
    patterns:
      - include: "#script_body"
  - match: \b=\b
    name: keyword.operator.assignment.mgs
  - include: "#constant_literal"
  - include: "#number_literal"
  - include: "#boolean_literal"
  - include: "#language_constants"
  - include: "#string_literal"
repository:
  comment_node:
    patterns:
      - begin: /\*
        beginCaptures:
          "0":
            name: punctuation.definition.comment.mgs
        end: \*/
        endCaptures:
          "0":
            name: punctuation.definition.comment.mgs
        name: comment.block.mgs
        patterns:
          - match: .+?
      - begin: //
        beginCaptures:
          "0":
            name: punctuation.definition.comment.mgs
        end: |-

          |$
        endCaptures:
          "0":
            name: punctuation.definition.comment.mgs
        name: comment.line.double-slash.mgs
        patterns:
          - match: .+?
  number_literal:
    patterns:
      - match: "#[0-9A-Fa-f]+\\b"
        name: constant.numeric.integer.mgs
      - match: \b([0-9]+(s|ms|px|pix|x)?|once|twice|thrice)\b
        name: constant.numeric.integer.mgs
      - match: \bblack|white|red|green|blue|magenta|cyan|yellow\b
        name: constant.numeric.integer.mgs
  include_macro:
    match: \b(include)\s*("[^"]+")
    captures:
      "1":
        name: entity.name.function.mgs
      "2":
        name: string.quoted.mgs
  constant_literal:
    match: \$[_a-zA-Z0-9]+\b
    name: variable.other.constant.mgs
  string_literal:
    match: '[_a-zA-Z][_a-zA-Z0-9]*|"[^"]*"'
    name: string.quoted.mgs
  boolean_literal:
    match: \b(true|false|off)\b|\bon(?!_)\b
    name: constant.language.mgs
  language_constants:
    match: \bnorth|south|west|east|MEM(0|1|2|3)|BIT(128|64|32|16|8|4|2|1)|XOR|ADD|SUB|PAGE|(L|R)JOY_(CENTER|UP|DOWN|LEFT|RIGHT)|TRIANGLE|X|CROSS|CIRCLE|O|SQUARE|HAX|ANY|ALL|LED_(XOR|ADD|SUB|PAGE|BIT128|BIT64|BIT32|BIT16|BIT8|BIT4|BIT2|BIT1|MEM0|MEM1|MEM2|MEM3|HAX|USB|SD|ANY)\b
    name: constant.language.mgs
  fn_definition:
    begin: (fn\s+)?("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*)\s*(\()
    beginCaptures:
      "1":
        name: storage.type.mgs
      "2":
        name: entity.name.function.mgs
      "3":
        name: punctuation.section.block.begin.mgs
    end: \)
    name: punctuation.section.block.end.mgs
    patterns:
      - include: "#constant_literal"
  fn_body:
    begin: (\{)
    beginCaptures:
      "1":
        name: punctuation.section.block.begin.mgs
    end: \}
    name: punctuation.section.block.end.mgs
    patterns:
      - include: "#script_body"
  fn_call:
    begin: ("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*)\s*(\()
    beginCaptures:
      "1":
        name: entity.name.function.mgs
      "2":
        name: punctuation.section.block.begin.mgs
    end: \)
    name: punctuation.section.block.end.mgs
    patterns:
      - match: (")(%(ENTITY_PATH|SELF|PLAYER|MAP)*%)(")
        captures:
          "1":
            name: string.quoted.mgs
          "2":
            name: variable.language.mgs
          "4":
            name: string.quoted.mgs
      - include: "#script_body"
  entity_identifier_special:
    match: \b(entity)\s+(")(%PLAYER%|%SELF%)(")
    captures:
      "1":
        name: variable.parameter.mgs
      "2":
        name: string.quoted.mgs
      "3":
        name: variable.language.mgs
      "4":
        name: string.quoted.mgs
  dialog_parameter:
    patterns:
      - include: "#comment_node"
      - include: "#entity_identifier_special"
      - match: \b(name)\s+(")(%[^%]*%)(")
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: string.quoted.mgs
          "3":
            name: variable.language.mgs
          "4":
            name: string.quoted.mgs
      - match: \b(border_tileset|portrait)\s+("[^`]*"|[_a-zA-Z][_a-zA-Z0-9]*)?
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: string.quoted.mgs
      - match: \b(entity|name|portrait|border_tileset|alignment|emote|wrap)\b
        name: variable.parameter.mgs
      - match: (?<=\balignment)\s+(TR|BR|TL|BL|TOP_RIGHT|BOTTOM_RIGHT|TOP_LEFT|BOTTOM_LEFT)\b
        name: constant.language.mgs
      - include: "#constant_literal"
      - include: "#number_literal"
      - include: "#string_literal"
  dialog_option_goto:
    match: (=)\s*("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*)
    captures:
      "1":
        name: keyword.operator.assignment.mgs
      "2":
        name: entity.name.function.mgs
  dialog_body:
    patterns:
      - include: "#comment_node"
      - patterns:
          - include: "#comment_node"
          - begin: entity\s+((\$[_a-zA-Z0-9]+\b)|[-0-9A-Za-z_$#]+\b|(")((%PLAYER%|%SELF%)|[^"]*)")
            beginCaptures:
              "0":
                name: support.type.mgs
              "2":
                name: variable.other.constant.mgs
              "5":
                name: variable.language.mgs
            end: (?=")
            endCaptures:
              "0":
                name: punctuation.section.block.end.mgs
            patterns:
              - include: "#comment_node"
              - include: "#dialog_parameter"
          - begin: name\s+((\$[_a-zA-Z0-9]+\b)|[-0-9A-Za-z_$#]+\b|(")((%[^%]*%)|[^"]*)")
            beginCaptures:
              "0":
                name: support.type.mgs
              "2":
                name: variable.other.constant.mgs
              "5":
                name: variable.language.mgs
            end: (?=")
            endCaptures:
              "0":
                name: punctuation.section.block.end.mgs
            patterns:
              - include: "#comment_node"
              - include: "#dialog_parameter"
          - begin: ((\$[_a-zA-Z0-9]+)|(\b[-0-9A-Za-z_$#]+))\b
            beginCaptures:
              "2":
                name: variable.other.constant.mgs
              "3":
                name: support.type.mgs
            end: (?=")
            endCaptures:
              "0":
                name: punctuation.section.block.end.mgs
            patterns:
              - include: "#comment_node"
              - include: "#dialog_parameter"
      - begin: '"'
        beginCaptures:
          "0":
            name: string.quoted.double.mgs
        end: (?<!\\)(?:\\{2})*\K"
        endCaptures:
          "0":
            name: string.quoted.double.mgs
        name: constant.character.escape.mgs
        patterns:
          - match: \\[nt"$%\\]
            name: constant.character.escape.mgs
          - match: "[%][^%]*?[%]"
            name: variable.language.mgs
          - match: \$[^\$]+?\$
            name: variable.language.mgs
          - match: .+?
            name: string.variable.mgs
      - include: "#dialog_option_goto"
      - match: (>)(\s*\$[_a-zA-Z0-9]+)?
        captures:
          "1":
            name: keyword.control.mgs
          "2":
            name: variable.language.mgs
  serial_message:
    begin: '"'
    beginCaptures:
      "0":
        name: string.quoted.double.mgs
    end: (?<!\\)(?:\\{2})*\K"
    endCaptures:
      "0":
        name: string.quoted.double.mgs
    name: constant.character.escape.mgs
    patterns:
      - match: (<)(((/|reset|bell)|bold|dim|(bg-)?(black|red|green|yellow|blue|magenta|cyan|white|k|r|g|y|b|m|c|w)))(>)
        captures:
          "1":
            name: punctuation.definition.tag.begin.mgs
          "2":
            name: entity.name.tag.mgs
          "4":
            name: punctuation.definition.tag.mgs
          "7":
            name: punctuation.definition.tag.end.mgs
      - match: \\[nt"\\]
        name: constant.character.escape.mgs
      - match: "[%][^%]*[%]"
        name: variable.language.mgs
      - match: \$[^\$]+?\$
        name: variable.language.mgs
      - match: .+?
        name: string.variable.mgs
  serial_message_underscore:
    begin: (_)\s+(")
    beginCaptures:
      "1":
        name: keyword.control.mgs
      "2":
        name: string.quoted.double.mgs
    end: (?<!\\)(?:\\{2})*\K"
    endCaptures:
      "0":
        name: string.quoted.double.mgs
    name: constant.character.escape.mgs
    patterns:
      - match: \\[t"\\]
        name: constant.character.escape.mgs
      - match: .+?
        name: string.variable.mgs
  serial_parameters:
    patterns:
      - include: "#comment_node"
      - match: \bwrap\b
        name: variable.parameter.mgs
      - include: "#constant_literal"
      - include: "#number_literal"
  serial_body:
    patterns:
      - include: "#comment_node"
      - include: "#serial_parameters"
      - include: "#serial_message"
      - include: "#serial_message_underscore"
      - include: "#dialog_option_goto"
      - match: _|:|#
        name: keyword.control.mgs
  script_body:
    patterns:
      - include: "#comment_node"
      - match: ([_a-zA-Z][_a-zA-Z0-9]*)\s*(:)
        captures:
          "1":
            name: entity.name.label.mgs
          "2":
            name: keyword.operator.assignment.mgs
      - begin: \b(for)\s*(\()
        beginCaptures:
          "1":
            name: keyword.control.conditional.mgs
          "2":
            name: punctuation.section.parens.begin.mgs
        end: \)
        endCaptures:
          "0":
            name: punctuation.section.parens.end.mgs
        patterns:
          - include: "#comment_node"
          - match: ;
            name: keyword.operator.logical.mgs
          - include: "#script_body"
      - begin: \b(do)\s*(\{)
        beginCaptures:
          "1":
            name: keyword.control.conditional.mgs
          "2":
            name: punctuation.section.parens.begin.mgs
        end: \}
        endCaptures:
          "0":
            name: punctuation.section.parens.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#script_body"
      - begin: \b(while)\s*(\()
        beginCaptures:
          "1":
            name: keyword.control.conditional.mgs
          "2":
            name: punctuation.section.parens.begin.mgs
        end: \)
        endCaptures:
          "0":
            name: punctuation.section.parens.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#script_body"
      - begin: \b(if|else\s+if)\s*(\()
        beginCaptures:
          "1":
            name: keyword.control.conditional.mgs
          "2":
            name: punctuation.section.parens.begin.mgs
        end: \)
        endCaptures:
          "0":
            name: punctuation.section.parens.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#script_body"
      - begin: \belse\s+(\{)
        beginCaptures:
          "0":
            name: keyword.control.conditional.mgs
          "1":
            name: punctuation.section.block.begin.mgs
        end: \}
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#script_body"
      - begin: \{
        beginCaptures:
          "0":
            name: punctuation.section.block.begin.mgs
        end: \}
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#comment_node"
          - include: "#script_body"
      - begin: \bif\b
        beginCaptures:
          "0":
            name: keyword.control.conditional.mgs
        end: \bthen\b|\n
        endCaptures:
          "0":
            name: keyword.control.conditional.mgs
        patterns:
          - include: "#script_body"
      - include: "#fn_call"
      - match: \b(debug\s*!)\s*(\()\s*([_a-zA-Z][_a-zA-Z0-9]*)?\s*(\))
        captures:
          "1":
            name: entity.name.function.mgs
          "2":
            name: punctuation.section.block.begin.mgs
          "3":
            name: variable.parameter.mgs
          "4":
            name: punctuation.section.block.begin.mgs
      - begin: \b(debug\s*!)\s*(\()
        beginCaptures:
          "1":
            name: entity.name.function.mgs
          "2":
            name: punctuation.section.block.begin.mgs
        end: \)
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#serial_body"
      - begin: \b(show)(\s+dialog)(\s*{)
        beginCaptures:
          "1":
            name: storage.type.mgs
          "2":
            name: variable.parameter.mgs
          "3":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#dialog_body"
      - begin: \b(show)\s+(dialog)(\s+([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*"))\s*({)
        beginCaptures:
          "1":
            name: storage.type.mgs
          "2":
            name: variable.parameter.mgs
          "3":
            name: string.quoted.double.mgs
          "5":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#dialog_body"
      - begin: \b(show|concat)\s+(serial_dialog)(\s+([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*"))?\s*({)
        beginCaptures:
          "1":
            name: storage.type.mgs
          "2":
            name: variable.parameter.mgs
          "3":
            name: string.quoted.double.mgs
          "5":
            name: punctuation.section.block.begin.mgs
        end: "}"
        endCaptures:
          "0":
            name: punctuation.section.block.end.mgs
        patterns:
          - include: "#serial_body"
      - begin: \b(rand!|RNG!)\s*(\()
        beginCaptures:
          "1":
            name: entity.name.function.mgs
          "2":
            name: punctuation.section.block.begin.mgs
        end: \)
        name: punctuation.section.block.end.mgs
        patterns:
          - include: "#script_body"
      - begin: \b(json)\s*(\[)
        beginCaptures:
          "1":
            name: entity.name.function.mgs
          "2":
            name: punctuation.section.block.begin.mgs
        end: \]
        name: punctuation.section.block.end.mgs
        patterns:
          - include: source.json
      - include: "#entity_identifier_special"
      - include: "#boolean_literal"
      - include: "#language_constants"
      - match: \b(geometry)\s+(")(%ENTITY_PATH%)(")
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: string.quoted
          "3":
            name: variable.language.mgs
          "4":
            name: string.quoted
      - match: \b(goto)\s+(label|index|script)\b
        captures:
          "1":
            name: keyword.control.mgs
          "2":
            name: variable.parameter.mgs
      - match: (map\s+)?(on_(tick|load|look|interact|command))\s*(!=|==|=)\s*(\$[_a-zA-Z0-9]+)
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: variable.object.property.mgs
          "4":
            name: keyword.operator.assignment.mgs
          "5":
            name: variable.other.constant.mgs
      - match: (map\s+)?(on_(tick|load|look|interact|command))\s*(!=|==|=)\s*([_a-zA-Z][_a-zA-Z0-9]*|"[^"]*")
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: variable.object.property.mgs
          "4":
            name: keyword.operator.assignment.mgs
          "5":
            name: entity.name.function.mgs
      - match: (map\s+)?(on_(tick|load|look|interact|command))
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: variable.object.property.mgs
      - match: \b(load)\s*(?=map)\b
        name: keyword.control.mgs
      - match: \b(return|continue|break|goto)\b
        name: keyword.control.loop.mgs
      - match: \b(command)\s+((\$[_a-zA-Z0-9]+)|([_a-zA-Z][_a-zA-Z0-9]*|(['"])[^`]*?\5))(\s+(fail)|\s*(\+)\s*((\$[_a-zA-Z0-9]+)|([_a-zA-Z][_a-zA-Z0-9]*|(['"])[^`]*?\12)))?\s*((=)\s*((\$[_a-zA-Z0-9]+)|([_a-zA-Z][_a-zA-Z0-9]*|(['"])[^`]*?\18)))?
        captures:
          "1":
            name: variable.parameter.mgs
          "3":
            name: variable.other.constant.mgs
          "4":
            name: string.quoted.mgs
          "6":
            name: variable.language.mgs
          "8":
            name: keyword.operator.assignment.mgs
          "10":
            name: variable.other.constant.mgs
          "11":
            name: string.quoted.mgs
          "14":
            name: keyword.operator.assignment.mgs
          "16":
            name: variable.other.constant.mgs
          "17":
            name: entity.name.function.mgs
      - match: \b(geometry|map|command|alias|dialog|serial_dialog|entity|flag|variable)\s+(\$[_a-zA-Z0-9]+)\b
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: variable.other.constant.mgs
      - match: \b(geometry|map|command|alias|dialog|serial_dialog|entity|flag|variable)\s+([_a-zA-Z][_a-zA-Z0-9]*\b|"[^"]*?")
        captures:
          "1":
            name: variable.parameter.mgs
          "2":
            name: string.quoted.mgs
      - match: \b(index|slot|button|light|dialog|serial_dialog|flag|variable|label)\b
        name: variable.parameter.mgs
      - match: \b(origin|length|position|x|y|(primary|secondary)_id|primary_id_type|(current_)?animation|animation_frame|strafe|name|path|direction|type|glitched)\b
        name: variable.object.property.mgs
      - match: \b(player_control|lights_control|hex_editor|hex_dialog_mode|hex_control|hex_clipboard|serial_control|warp_state|serial_connect|debug_mode)\b
        name: variable.parameter.mgs
      - match: \b(delete|(un)?hide|save|load|erase|block|wait|close|(un)?pause|show|copy|fade|shake|show|concat)\b
        name: storage.type.mgs
      - match: \b(out|in|open|closed|fail|forever|over|down|up|pressed)\b
        name: variable.language.mgs
      - match: \b(player|self|camera)\b
        name: variable.language.mgs
      - match: <|<=|!=|==|=>|>|\|\||&&|intersects
        name: keyword.operator.logical.mgs
      - match: (->|=|\?=|\+=|-=|\*=|\/=|%=|!)
        name: keyword.operator.assignment.mgs
      - include: "#constant_literal"
      - include: "#number_literal"
      - match: (?<=goto|script)\s+("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*\b)
        name: entity.name.function.mgs
      - match: (?<=(warp_state|type|name|path)
          (=|==|!=))\s+("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*\b)
        name: string.quoted.mgs
      - match: (?<=label)\s+("[^"]*"|[_a-zA-Z][_a-zA-Z0-9]*\b)
        name: entity.name.label.mgs
      - match: "[_a-zA-Z][_a-zA-Z0-9]*"
        name: variable.parameter.mgs
      - match: '[_a-zA-Z][_a-zA-Z0-9]*|"[^"]*"'
        name: variable.parameter.mgs
scopeName: source.mgs
