{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MageGameScript",
	"patterns": [
		{ "include": "#comment_node" },
		{ "include": "#dialog_settings_node" },
		{ "include": "#dialog_node" },
		{ "include": "#script_node" }
	],
	"repository": {
		"comment_node": {
			"patterns": [
				{ "include": "#comment_block" },
				{ "include": "#comment_inline" }
			],
			"repository": {
				"comment_block": {
					"begin": "/\\*",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment"
						}
					},
					"name": "comment.block",
					"patterns": [
						{
							"name": "comment.block",
							"match": ".+?"
						}
					]
				},
				"comment_inline": {
					"begin": "\/\/",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment"
						}
					},
					"end": "\n",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment"
						}
					},
					"name": "comment.line.double-slash",
					"patterns": [
						{
							"name": "comment.block",
							"match": ".+?"
						}
					]
				}
			}
		},
		"dialog_settings_node": {
			"begin": "(settings)(\\s+(for))?\\s+(dialog)\\s*({)",
			"beginCaptures": {
				"1": { "name": "support.type" },
				"4": { "name": "variable.parameter.mgs" },
				"5": { "name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end punctuation.definition.bracket.curly.end"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_block_body" }
			]
		},
		"dialog_settings_block_body": {
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_individual_parameters_node" },
				{ "include": "#dialog_settings_global_parameters_node" }
			]
		},
		"dialog_settings_individual_parameters_node": {
			"begin": "\\b(parameters)(\\s+(for))?\\s+(label|entity)\\s+(([^\\s'\"]+)|(['\"])[^`]*?\\7)\\s+({)",
			"beginCaptures": {
				"1": {
					"name": "support.type.mgs"
				},
				"4": {
					"name": "variable.parameter.mgs"
				},
				"5": {
					"name": "support.type.mgs"
				},
				"8": {
					"name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end punctuation.definition.bracket.curly.end"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_individual_parameter" },
				{ "include": "#dialog_settings_individual_value" }
			]
		},
		"dialog_settings_global_parameters_node": {
			"begin": "\\b(parameters)(\\s+for)?(\\s+global)?\\s+(defaults?)\\s+({)",
			"beginCaptures": {
				"1": {
					"name": "support.type"
				},
				"3": {
					"name": "variable.parameter.mgs"
				},
				"4": {
					"name": "keyword.other"
				},
				"5": {
					"name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end punctuation.definition.bracket.curly.end"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_individual_parameter" },
				{ "include": "#dialog_settings_individual_value" }
			]
		},
		"dialog_settings_individual_parameter": {
			"patterns": [
				{
					"match": "\\b(entity|alignment|name|portrait|messages|options)\\b",
					"name": "variable.parameter.mgs"
				},
				{
					"match": "\\b(wrap|set)\\b",
					"name": "keyword.control.assignment.mgs"
				},
				{
					"match": "\\bto\\b",
					"name": "keyword.operator.mgs"
				}
			]
		},
		"dialog_settings_individual_value": {
			"patterns": [
				{
					"match": "\\b(TR|BR|TL|BL|TOP_RIGHT|BOTTOM_RIGHT|TOP_LEFT|BOTTOM_LEFT)\\b",
					"name": "constant.language.mgs"
				},
				{
					"match": "\\b([0-9]+)\\b",
					"name": "constant.numeric.integer.mgs"
				},
				{
					"match": "(['\"])(%PLAYER%|%SELF%)*?(\\1)",
					"captures": {
						"1": {
							"name": "string.variable.mgs"
						},
						"2": {
							"name": "punctuation.definition.variable.mgs variable.language.mgs"
						},
						"3": {
							"name": "string.variable.mgs"
						}
					}
				},
				{
					"match": "(['\"])[^`]*?\\1",
					"name": "string.variable.mgs"
				}
			]
		},
		"dialog_node": {
			"begin": "\\b(dialog)(\\s+(([^\\s'\"]+|(['\"])[^`]*?\\5)))?\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "variable.parameter.mgs support.variable.mgs" },
				"6": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_option_label" },
				{ "include": "#dialog_option_goto" },
				{ "include": "#dialog_entity_specifier" },
				{ "include": "#dialog_settings_individual_parameter" },
				{ "include": "#dialog_settings_individual_value" },
				{ "include": "#dialog_rando_operator" },
				{ "include": "#dialog_generic_specifier" }
			]
		},
		"show_dialog_node": {
			"begin": "\\b(show)\\s+(dialog)(\\s+(([^\\s'\"]+|(['\"])[^`]*?\\6)))?\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "variable.parameter.mgs support.variable.mgs" },
				"3": { "name": "string.quoted.double.mgs string.variable.mgs" },
				"7": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_option_label" },
				{ "include": "#dialog_option_goto" },
				{ "include": "#dialog_entity_specifier" },
				{ "include": "#dialog_settings_individual_parameter" },
				{ "include": "#dialog_settings_individual_value" },
				{ "include": "#dialog_rando_operator" },
				{ "include": "#dialog_generic_specifier" }
			]
		},
		"dialog_option_label": {
			"match": "(>)\\s*((['\"])[^`]*?\\3)",
			"captures": {
				"1": {
					"name": "keyword.operator"
				},
				"2": {
					"name": "string.quoted.double.mgs string.variable.mgs"
				}
			}
		},
		"dialog_option_goto": {
			"match": "(:)\\s*(script\\s)?(((['\"])[^`]*?\\5)|[^\\s'\"]+)",
			"captures": {
				"1": {
					"name": "keyword.operator"
				},
				"2": {
					"name": "variable.parameter.mgs support.variable.mgs"
				},
				"3": {
					"name": "entity.name.function.mgs"
				}
			}
		},
		"dialog_entity_specifier": {
			"match": "\\b(entity)\\s+((['\"])[^`]*?\\3)",
			"captures": {
				"1": {
					"name":"variable.parameter.mgs"
				},
				"2": {
					"name": "support.type.mgs"
				}
			}
		},
		"dialog_rando_operator":{
			"match": "[:>]",
			"name": "keyword.operator"
		},
		"dialog_generic_specifier": {
			"match": "[^\\s'\"]",
			"name": "support.type.mgs"
		},
		"script_node": {
			"begin": "\\b(script\\s+)?((([^\\s'\"]+|(['\"])[^`]*?\\5)))?\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "entity.name.function.mgs" },
				"7": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#show_dialog_node" },
				{ "include": "#script_keyword_scripts_bodge" },
				{ "include": "#script_keyword_scripts" },
				{ "include": "#script_interact_scripts" },
				{ "include": "#script_keywords" },
				{ "include": "#script_booleans" },
				{ "include": "#script_cardinals" },
				{ "include": "#script_buttons" },
				{ "include": "#script_constants" },
				{ "include": "#script_labels" },
				{ "include": "#script_fields" },
				{ "include": "#script_operators" },
				{ "include": "#script_strings" }
			]
		},
		"script_keyword_scripts_bodge": {
			"match": "\\b(copy)\\s+(entity)",
			"captures": {
				"1": {
					"name": "keyword.control.mgs"
				},
				"2": {
					"name": "variable.parameter.mgs"
				}
			}
		},
		"script_keyword_scripts": {
			"match": "\\b(goto|copy)\\s+(script\\s+)?((([^\\s'\"]+|(['\"])[^`]*?\\6)))",
			"captures": {
				"1": {
					"name": "keyword.control.mgs"
				},
				"2": {
					"name": "variable.parameter.mgs"
				},
				"3": {
					"name": "entity.name.function.mgs"
				}
			}
		},
		"script_interact_scripts": {
			"match": "\\b(interactScript|tickScript|lookScript)\\s+(is|is not|to)\\s((([^\\s'\"]+|(['\"])[^`]*?\\6)))",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"3": { "name": "entity.name.function.mgs" }
			}
		},
		"script_keywords": {
			"patterns": [
				{
					"name": "keyword.control.mgs",
					"match": "\\b(block|close|copy|erase|fade in|fade out|load|loop|make|mutate|open|pan|play|rotate|save|shake|show|teleport|turn|wait|walk)\\b"
				},
				{
					"name": "keyword.control.conditional.mgs",
					"match": "\\b(if|then)\\b"
				},
				{
					"name": "keyword.control.assignment.mgs",
					"match": "\\b(set)\\b"
				}
			]
		},
		"script_booleans": {
			"name": "constant.language.mgs",
			"match": "\\b(true|false|on|off|glitched|unglitched)\\b"
		},
		"script_cardinals": {
			"name": "constant.language.mgs",
			"match": "\\b(north|south|east|west)\\b"
		},
		"script_buttons": {
			"name": "constant.language.mgs",
			"match": "\\b(MEM0|MEM1|MEM2|MEM3|BIT128|BIT64|BIT32|BIT16|BIT8|BIT4|BIT2|BIT1|XOR|ADD|SUB|PAGE|LJOY_CENTER|LJOY_UP|LJOY_DOWN|LJOY_LEFT|LJOY_RIGHT|RJOY_CENTER|RJOY_UP|RJOY_DOWN|RJOY_LEFT|RJOY_RIGHT|TRIANGLE|X|CROSS|CIRCLE|O|SQUARE|HAX|ANY)\\b"
		},
		"script_constants": {
			"patterns": [
				{
					"name": "constant.numeric.integer.mgs",
					"match": "([0-9]+(ms|px)?)"
				},
				{
					"name": "constant.numeric.integer.mgs",
					"match": "(-?[0-9]+)"
				},
				{
					"name": "constant.numeric.integer.mgs",
					"match": "\\b((once|twice|thrice)|(x[0-9]+))"
				}
			]
		},
		"script_variables": {
			"name": "string.variable.mgs variable.parameter.mgs",
			"match": "#[0-9A-F]+"
		},
		"script_labels": {
			"name": "variable.parameter.mgs",
			"match": "\\b(flag|geometry|map|variable|dialog|button|serial dialog|entity|warp state|camera|player control|slot|hex dialog mode|hex control|hex clipboard|hex editor)\\b"
		},
		"script_fields": {
			"name": "variable.parameter.mgs",
			"match": "\\b(name|x|y|interactScript|tickScript|type|primaryID|secondaryID|primaryIDtype|animation|animationFrame|direction|hackableStateA|hackableStateB|hackableStateC|hackableStateD|hackableStateAU2|hackableStateAU4|hackableStateCU2|path)\\b"
		},
		"script_operators": {
			"name": "keyword.operator.logical.mgs",
			"match": "\\s(==|<=|<|>|>=)\\s"
		},
		"script_strings": {
			"patterns": [
				{ "include": "#script_string_single" },
				{ "include": "#script_string_double" }
			]
		},
		"script_string_double": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.double.mgs punctuation.definition.string.begin.mgs"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string.quoted.double.mgs punctuation.definition.string.end.mgs"
				}
			},
			"patterns": [
				{
					"name": "punctuation.definition.variable.mgs variable.language.mgs",
					"match": "(%PLAYER%|%PATH%|%SELF%)"
				},
				{
					"name": "string.quoted.double.mgs punctuation.definition.string.end.mgs",
					"match": "[^\"`]*"
				}
			]
		},
		"script_string_single": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.single.mgs punctuation.definition.string.begin.mgs"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "string.quoted.single.mgs punctuation.definition.string.end.mgs"
				}
			},
			"patterns": [
				{
					"name": "punctuation.definition.variable.mgs variable.language.mgs",
					"match": "(%PLAYER%|%PATH%|%SELF%)"
				},
				{
					"name": "string.quoted.single.mgs punctuation.definition.string.end.mgs",
					"match": "[^'`]*"
				}
			]
		}
	},
	"scopeName": "source.mgs"
}