{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MageGameScript",
	"patterns": [
		{ "include": "#comment_node" },
		{ "include": "#dialog_settings_node" },
		{ "include": "#dialog_node" },
		{ "include": "#script_node" }
	],
	"repository": {
		"comment_node": {
			"patterns": [
				{ "include": "#comment_block" },
				{ "include": "#comment_inline" }
			]
		},
		"comment_block": {
			"begin": "/\\*",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment"
				}
			},
			"end": "\\*/",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment"
				}
			},
			"name": "comment.block",
			"patterns": [
				{
					"name": "comment.block",
					"match": ".+?"
				}
			]
		},
		"entity_relative_self_player": {
			"match": "(['\"])(%PLAYER%|%SELF%)(\\1)",
			"captures": {
				"1": {
					"name": "string.variable.mgs"
				},
				"2": {
					"name": "punctuation.definition.variable.mgs variable.language.mgs"
				},
				"3": {
					"name": "string.variable.mgs"
				}
			}
		},
		"comment_inline": {
			"begin": "\/\/",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment"
				}
			},
			"end": "\n",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment"
				}
			},
			"name": "comment.line.double-slash",
			"patterns": [
				{
					"name": "comment.block",
					"match": ".+?"
				}
			]
		},
		"dialog_settings_node": {
			"begin": "(settings)(\\s+for)?\\s+(dialog)\\s*({)",
			"beginCaptures": {
				"1": { "name": "support.type" },
				"3": { "name": "variable.parameter.mgs" },
				"4": { "name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_block_body" }
			]
		},
		"dialog_settings_block_body": {
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_settings_individual_parameters_node" },
				{ "include": "#dialog_settings_global_parameters_node" }
			]
		},
		"dialog_settings_individual_parameters_node": {
			"begin": "\\b(parameters)(\\s+for)?\\s+(label|entity)\\s+(([^\\s'\"]+)|(['\"])[^`]*?\\6)\\s+({)",
			"beginCaptures": {
				"1": {
					"name": "support.type.mgs"
				},
				"3": {
					"name": "variable.parameter.mgs"
				},
				"4": {
					"name": "support.type.mgs"
				},
				"7": {
					"name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin.mgs"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_parameter" }
			]
		},
		"dialog_settings_global_parameters_node": {
			"begin": "\\b(parameters\\s+)?(for\\s+)?(global\\s+)?(defaults?\\s+)({)",
			"beginCaptures": {
				"1": {
					"name": "support.type"
				},
				"3": {
					"name": "variable.parameter.mgs"
				},
				"4": {
					"name": "keyword.other"
				},
				"5": {
					"name": "punctuation.definition.parameters.begin.mgs punctuation.definition.bracket.curly.begin.mgs"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end punctuation.definition.bracket.curly.end"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_parameter" }
			]
		},
		"dialog_parameter": {
			"patterns": [
				{
					"match": "\\b(entity)\\s+(\")(%PLAYER%|%SELF%)(\")",
					"captures": {
						"1": {
							"name": "variable.parameter.mgs"
						},
						"2": {
							"name": "string.variable.mgs"
						},
						"3": {
							"name": "punctuation.definition.variable.mgs variable.language.mgs"
						},
						"4": {
							"name": "string.variable.mgs"
						}
					}
				},
				{
					"match": "\\b(entity)\\s+(([-A-Za-z0-9_.#$]+)|(['\"])([^`]*?)\\4)\\s",
					"captures": {
						"0": {
							"name": "string.variable.mgs"
						},
						"1": {
							"name": "variable.parameter.mgs"
						},
						"3": {
							"name": "support.type.mgs"
						},
						"5": {
							"name": "support.type.mgs"
						}
					}
				},
				{
					"match": "\\b(name)\\s+(['\"])(%[^%]+%)\\2",
					"captures": {
						"0": {
							"name": "string.variable.mgs"
						},
						"1": {
							"name": "variable.parameter.mgs"
						},
						"3": {
							"name": "punctuation.definition.variable.mgs variable.language.mgs"
						}
					}
				},
				{
					"match": "\\b(border_tileset|emote)\\s+([0-9]+)\\b",
					"captures": {
						"1": {
							"name": "variable.parameter.mgs"
						},
						"2": {
							"name": "constant.numeric.integer.mgs"
						}
					}
				},
				{
					"match": "\\b(name|portrait|border_tileset)\\s+(([-A-Za-z0-9_.#$]+)|(['\"])[^`]*?\\4)\\s",
					"captures": {
						"1": {
							"name": "variable.parameter.mgs"
						},
						"2": {
							"name": "string.variable.mgs"
						}
					}
				},
				{
					"match": "\\b(alignment)\\s+(TR|BR|TL|BL|TOP_RIGHT|BOTTOM_RIGHT|TOP_LEFT|BOTTOM_LEFT)\\b",
					"captures": {
						"1": {
							"name": "variable.parameter.mgs"
						},
						"2": {
							"name": "constant.language.mgs"
						}
					}
				},
				{
					"match": "\\b(wrap|set)\\s+(messages|options)(\\s+to)?\\s+([0-9]+)\\b",
					"captures": {
						"1": {
							"name": "keyword.control.assignment.mgs"
						},
						"2": {
							"name": "variable.parameter.mgs"
						},
						"3": {
							"name": "keyword.operator.mgs"
						},
						"4": {
							"name": "constant.numeric.integer.mgs"
						}
					}
				}
			]
		},
		"dialog_bareword_identifier": {
			"match": "\\b[-A-Za-z0-9_.#$]+\\b",
			"name": "support.type.mgs"
		},
		"dialog_message": {
			"begin": "(?<!\\\\)(?:\\\\{2})*\\K\"",
			"beginCaptures": {
				"0": { "name": "string.quoted.double.mgs string.variable.mgs" }
			},
			"end": "(?<!\\\\)(?:\\\\{2})*\\K\"",
			"endCaptures": {
				"0": { "name": "string.quoted.double.mgs string.variable.mgs" }
			},
			"patterns": [
				{
					"match": "\\\\[n\"$%]",
					"name": "constant.character.escape.mgs"
				},
				{
					"match": "[%][^%]+?[%]",
					"name": "punctuation.definition.variable.mgs variable.language.mgs"
				},
				{
					"match": "\\$[^\\$]+?\\$",
					"name": "punctuation.definition.variable.mgs variable.language.mgs"
				},
				{
					"match": ".+?",
					"name": "string.variable.mgs"
				}
			]
		},
		"dialog_node": {
			"begin": "\\b(dialog)(\\s+(([-A-Za-z0-9_.#$]+|(['\"])[^`]*?\\5)))?\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "variable.parameter.mgs support.variable.mgs" },
				"6": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_parameter" },
				{ "include": "#dialog_message" },
				{ "include": "#dialog_option_goto" },
				{ "include": "#dialog_rando_operator" },
				{ "include": "#dialog_bareword_identifier" }
			]
		},
		"show_dialog_node": {
			"begin": "\\b(show)\\s+(dialog)(\\s+(([-A-Za-z0-9_.#$]+|(['\"])[^`]*?\\6)))?\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "variable.parameter.mgs support.variable.mgs" },
				"3": { "name": "string.quoted.double.mgs string.variable.mgs" },
				"7": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#dialog_parameter" },
				{ "include": "#dialog_message" },
				{ "include": "#dialog_option_goto" },
				{ "include": "#dialog_rando_operator" },
				{ "include": "#dialog_bareword_identifier" }
			]
		},
		"dialog_option_goto": {
			"match": "(:)\\s*(goto\\s)?(script\\s)?(((['\"])[^`]*?\\6)|[-A-Za-z0-9_.#$]+)",
			"captures": {
				"1": {
					"name": "keyword.operator"
				},
				"2": {
					"name": "keyword.control.mgs"
				},
				"3": {
					"name": "variable.parameter.mgs support.variable.mgs"
				},
				"4": {
					"name": "entity.name.function.mgs"
				}
			}
		},
		"dialog_rando_operator":{
			"match": "[:>]",
			"name": "keyword.operator"
		},
		"script_node": {
			"begin": "(script\\s+)?(((([-A-Za-z0-9_.#$]+)|((['\"])[^`]*?\\7))))\\s+({)",
			"beginCaptures": {
				"1": { "name": "keyword.control.assignment.mgs" },
				"2": { "name": "entity.name.function.mgs" },
				"8": { "name": "punctuation.definition.bracket.curly.begin.mgs punctuation.definition.parameters.begin.mgs" }
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.bracket.curly.end.mgs punctuation.definition.bracket.curly.end.mgs"
				}
			},
			"patterns": [
				{ "include": "#comment_node" },
				{ "include": "#show_dialog_node" },
				{ "include": "#script_keyword_scripts_bodge" },
				{ "include": "#script_keyword_scripts" },
				{ "include": "#script_interact_scripts" },
				{ "include": "#script_specifier_string_pairs_relative" },
				{ "include": "#script_specifier_string_pairs" },
				{ "include": "#script_specifier_string_serial_special" },
				{ "include": "#script_specifier_string_pairs_mutate" },
				{ "include": "#script_entity_property_to" },
				{ "include": "#script_keywords" },
				{ "include": "#script_booleans" },
				{ "include": "#script_cardinals" },
				{ "include": "#script_buttons" },
				{ "include": "#script_constants" },
				{ "include": "#script_labels" },
				{ "include": "#script_fields" },
				{ "include": "#script_operators" },
				{ "include": "#script_strings" }
			]
		},
		"script_keyword_scripts_bodge": {
			"match": "\\b(copy)\\s+(entity|variable)",
			"captures": {
				"1": {
					"name": "keyword.control.mgs"
				},
				"2": {
					"name": "variable.parameter.mgs"
				}
			}
		},
		"script_keyword_scripts": {
			"match": "\\b(goto|copy)\\s+(script\\s+)?((([-A-Za-z0-9_.#$]+|(['\"])[^`]*?\\6)))",
			"captures": {
				"1": {
					"name": "keyword.control.mgs"
				},
				"2": {
					"name": "variable.parameter.mgs"
				},
				"3": {
					"name": "entity.name.function.mgs"
				}
			}
		},
		"script_interact_scripts": {
			"match": "\\b(interactScript|tickScript|lookScript)\\s+(is|to)\\s+(not\\s+)?(([-A-Za-z0-9_.#$]+)|((['\"])[^`]*?\\7))",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"4": { "name": "entity.name.function.mgs" }
			}
		},
		"script_keywords": {
			"patterns": [
				{
					"name": "keyword.control.mgs",
					"match": "\\b(block|close|copy|erase|fade in|fade out|load|loop|make|open|pan|play|rotate|save|shake|show|teleport|turn|wait|walk)\\b"
				},
				{
					"name": "keyword.control.conditional.mgs",
					"match": "\\b(if|then)\\b"
				},
				{
					"name": "keyword.control.assignment.mgs",
					"match": "\\b(set)\\b"
				}
			]
		},
		"script_booleans": {
			"name": "constant.language.mgs",
			"match": "\\b(true|false|on|off|glitched|unglitched)\\b"
		},
		"script_cardinals": {
			"name": "constant.language.mgs",
			"match": "\\b(north|south|east|west)\\b"
		},
		"script_buttons": {
			"name": "constant.language.mgs",
			"match": "\\b(MEM0|MEM1|MEM2|MEM3|BIT128|BIT64|BIT32|BIT16|BIT8|BIT4|BIT2|BIT1|XOR|ADD|SUB|PAGE|LJOY_CENTER|LJOY_UP|LJOY_DOWN|LJOY_LEFT|LJOY_RIGHT|RJOY_CENTER|RJOY_UP|RJOY_DOWN|RJOY_LEFT|RJOY_RIGHT|TRIANGLE|X|CROSS|CIRCLE|O|SQUARE|HAX|ANY)\\b"
		},
		"script_constants": {
			"patterns": [
				{
					"name": "constant.numeric.integer.mgs",
					"match": "([0-9]+(ms|px)?)"
				},
				{
					"name": "constant.numeric.integer.mgs",
					"match": "(#[0-9A-F]+)"
				},
				{
					"name": "constant.numeric.integer.mgs",
					"match": "(-?[0-9]+)"
				},
				{
					"name": "constant.numeric.integer.mgs",
					"match": "\\b((once|twice|thrice)|([0-9]+x?))"
				}
			]
		},
		"script_variables": {
			"name": "string.variable.mgs variable.parameter.mgs",
			"match": "#[0-9A-F]+"
		},
		"script_labels": {
			"name": "variable.parameter.mgs",
			"match": "\\b(button|serial dialog|camera|player control|slot|hex dialog mode|hex control|hex clipboard|hex editor)\\b"
		},
		"script_specifier_string_pairs": {
			"match": "\\b(flag|geometry|map|variable|dialog|serial dialog|entity)\\s+(([-A-Za-z0-9_.#$]+?)|((['\"])[^`]*?\\5))\\s+",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"2": { "name": "string.variable.mgs" }
			}
		},
		"script_specifier_string_pairs_relative": {
			"match": "\\b(entity)\\s+((['\"])(%PLAYER%|%SELF%)\\3)",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"2": { "name": "string.variable.mgs" },
				"4": { "name": "punctuation.definition.variable.mgs variable.language.mgs" }
			}
		},
		"script_specifier_string_serial_special": {
			"match": "\\b(serial connect)\\s+(message\\s+)?(to\\s+)?(([-A-Za-z0-9_.#$]+?)|((['\"])[^`]*?\\7))\\s+",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"2": { "name": "variable.parameter.mgs" },
				"4": { "name": "string.variable.mgs" }
			}
		},
		"script_specifier_string_pairs_mutate": {
			"match": "\\b((mutate)(\\s+variable)?)\\s+(([-A-Za-z0-9_.#$]+?)|((['\"])[^`]*?\\7))\\s+(SET|ADD|SUB|MUL|DIV|MOD|RNG|set|add|sub|mul|div|mod|rng|=|\\+|-|\\*|\\/|%|\\?)\\s+(([0-9]+)|(([-A-Za-z0-9_.#$]+?)|((['\"])[^`]*?\\14)))",
			"captures": {
				"2": { "name": "keyword.control.assignment.mgs" },
				"3": { "name": "variable.parameter.mgs.mgs" },
				"4": { "name": "string.variable.mgs" },
				"10": { "name": "constant.numeric.integer.mgs" },
				"11": { "name": "string.variable.mgs" }
			}
		},
		"script_entity_property_to": {
			"match": "\\b(name|type|warp state|path)\\s+(is|to)(\\s+not)?\\s+(([-A-Za-z0-9_.#$]+?)|((['\"])[^`]*?\\7))\\s+",
			"captures": {
				"1": { "name": "variable.parameter.mgs" },
				"4": { "name": "string.variable.mgs" }
			}
		},
		"script_fields": {
			"name": "variable.parameter.mgs",
			"match": "\\b(x|y|primaryID|secondaryID|primaryIDtype|animation|animationFrame|direction|hackableStateA|hackableStateB|hackableStateC|hackableStateD|hackableStateAU2|hackableStateAU4|hackableStateCU2)\\b"
		},
		"script_operators": {
			"name": "keyword.operator.logical.mgs",
			"match": "\\s(==|<=|<|>|>=)\\s"
		},
		"script_strings": {
			"patterns": [
				{ "include": "#script_string_single" },
				{ "include": "#script_string_double" }
			]
		},
		"script_string_double": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.double.mgs punctuation.definition.string.begin.mgs"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string.quoted.double.mgs punctuation.definition.string.end.mgs"
				}
			},
			"patterns": [
				{
					"name": "punctuation.definition.variable.mgs variable.language.mgs",
					"match": "(%PLAYER%|%PATH%|%SELF%)"
				},
				{
					"name": "string.quoted.double.mgs punctuation.definition.string.end.mgs",
					"match": "[^\"`]*"
				}
			]
		},
		"script_string_single": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.single.mgs punctuation.definition.string.begin.mgs"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "string.quoted.single.mgs punctuation.definition.string.end.mgs"
				}
			},
			"patterns": [
				{
					"name": "punctuation.definition.variable.mgs variable.language.mgs",
					"match": "(%PLAYER%|%PATH%|%SELF%)"
				},
				{
					"name": "string.quoted.single.mgs punctuation.definition.string.end.mgs",
					"match": "[^'`]*"
				}
			]
		}
	},
	"scopeName": "source.mgs"
}